// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Club {
  id                 Int      @id @default(autoincrement())
  clubId             Int      @unique        // external ID from API
  name               String
  description        String?
  longitude          Float
  latitude           Float
  isHidden           Boolean  @default(false)
  qrCodeSuffixConfig String
  isDeleted          Boolean  @default(false)

  // audit
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  address            Address?
  occupancies        ClubOccupancy[]
}

model Address {
  id         Int      @id @default(autoincrement())
  country    String
  city       String
  postalCode String?
  line1      String
  line2      String?

  clubId     Int      @unique
  club       Club     @relation(fields: [clubId], references: [id], onDelete: Cascade)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ClubOccupancy {
  id         Int      @id @default(autoincrement())

  clubId     Int
  club       Club     @relation(fields: [clubId], references: [clubId], onDelete: Cascade)

  count      Int

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([clubId, createdAt])
}
